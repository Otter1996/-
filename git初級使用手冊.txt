GIt是專案管理工具
如果要使用GIT就必須去下載GIT工具，且必須使用cmd(使用命令介面)來操作git
git基本操作:
1.git init初始化GIT repository
2.git status 觀察repositorty檔案狀態
3.git add 檔名 /git add. 將打案加入追蹤(Index)清單
4.git commit -m "版本更新訊息" 建立一組版本更新
5.git branch 查看分支(Branch)

步驟
1.在適合的地方建立一個專案 ex:project-1，把所有網站有關的東西都放在該專案裡
2.在專案資料夾的路徑設定，專案在哪裡工作資料夾就在哪裡。
3.在該路徑底下初始化git init ，意思是在該專案資料夾裡，放入一個隱藏的資料夾(.git)。
4.如果在該檔案裡新增檔案，這時使用git status時就會出現該檔案名稱(表示尚未commit)。
5.這時如果要把改過的程式或新增的程式，加入git裡時，這時候就要打git add/如果改動的檔案很多這時候就可以打git add.將所有程式一次加入到git裡。
6.這時檔名就會呈現綠色(表示已加入追蹤)
7.這時使用git commit -m""，用來新增一個版本。

git branch
1.git branch功用:在不想要動到主程式的情況下，新增一個新的功能，這時就會使用到git branch。那分支的目的就是將整體流程做一個分岔的保存。
2.如果再CMD裡面打git Branch就會出現你的專案裡有哪些分支，第一次打branch會出現 *master代表主branch。

git log
1.用來查看先前commit的版本紀錄


github
1.github最主要的運作單位就是repository(可以翻作雲端的專案空間)
2.Repository name可以隨便填。
3.如果你想要把你的專案分享給同事，可以利用github，將專案紀錄上傳到github的雲端空間。
4.就算獨立開發，也可以傳到github備份。
5.git remote -v 查詢關聯的Repository，-v會顯示得更詳細。空白代表目前沒有關聯的雲端空間。
6.本機端專案跟Github連接，git remote add (origin/我們替遠端命名的名稱) + 雲端專案空間的連線網址。
7.git push 遠端空間的名稱 遠端空間的分支。 ->用途為上傳到GIthub雲端專案空間。
8.origin URL (fetch)代表抓取的網址。
9.origin URL (push)代表上傳的網址。

如何跟其他同事合作同一個專案?
1.下載github雲端專案到本機
2.git clone 遠端空間的網址 本機資料夾名稱(自己取)   (第一次下載github雲端專案)
3.未來必須要不斷的從github雲端下載合併更新專案，這時候就會用到git pull 遠端空間的名稱 遠端空間的分支
4.上班第一件事就是使用git pull 來合併專案。

總結步驟:
1.git pull 合併專案
2.寫程式(更動)
3.git status /git status -s(縮寫)
4.git add
5.git commit
6.git push

如何看到修改狀態的詳細內容?
1.git diff 必須使用在git add 之才會有效。
2.git diff --cached可以使用在git add之後。

如果已commit的版本想回頭加入某些內容，但還是維持在該commit版本的方法?
1.git commit --amend --no-edit(不想改發佈內容)
雖然不會commit出其他版本但commit id還是會有所改變。

如果已經git add的檔案想要反悔，回到Modifiy的狀態如何做到?
git reset (檔案名)
如果已經commit的檔案想要反悔，回到Modifiy的狀態如何做到?
git reset (所在分支/masters orign)

如果想要回朔版本可以怎做?
1.git reset --hard HEAD(往前回朔一個版本，HEAD表示指針)
2.git reset --hard HEAD^^/git reset --hard HEAD~2 皆表示往前回朔兩個版本
3.git reset --hard (版本號碼) 可以回朔到指定的版本

如果回朔了以後又反悔了，該怎麼辦?
1.使用git reflog 可以看到HEAD(指針)每一步的紀錄
2.看到了指針先前的紀錄之後，就可以使用git reset --hard (版本ID/HEAD@{數字})

使用checkout來針對單個文件回朔所進行的操作
git checkout (欲回朔到該版本內容的ID) -- (文件名稱EX:1.py)

在一個雲端資料庫下，如果要觀看另一個版本就逼需透過移動HEAD來進行。以下步驟
1.創制分支 git branch (分支名)
2.查看分支是否被創建: git branch
3.如果想要進入到分支裡，就必須使用git checkout(分支名)

新增文件:touch (文件名)

修改文件:vi (文件名) 修改後保存"wq"

查看文件內容: cat (文件名)

同時創建一個分支並將HEAD指像該分支的語法:git checkout -b (分支名)

刪除分支: git branch -d (分支名)

差看HEAD目前所指向的HEAD分支內容:ll

如果想要合併分支可以使用:git merge (分支名字) 那merge的對象就是當前HEAD所在的點。

如果想要把branch也推送上github就必須到該branch裡 git push origin (分支名)

如果想要在本地刪除分支其命令如下:git push origin :(分支名)

如果本地的branch叫feature1但是遠端的branch不想叫feature1該怎麼做? git push origin feature:f1

查看git commit 紀錄:git log / git log --oneline

查看某次commit到底commit了甚麼，git show (commit碼)

如果看到文件裡長成
<<<<<<<<<HEAD
OOOOXXXXX     <---當前分支的內容(本地)
=========
OOOXXXXXX     <---欲合併的分支內容(遠端主機)
>>>>>>>>>(branch name)
代表merge時發生衝突，原因是因為有人在你pull之後又push到該分支上，怕你不知道裡面內容而覆蓋過去。


如果需要merge就可以使用git mergetool來進行合併

刪除分支裡面的某文件，rm (文件名)

git revert:可以撤銷某一次操作，此次操作之前和之後的commit 和 history都保留，並且把這次撤銷為一次最新的提交

gitignore文件可以避免一些不必要資料上傳或者是一些敏感資料，以下為gitignore的寫法。
*.sh //代表所有的.sh檔都都會忽略
.settings/ //代表settings這個資料夾內的所有東西都要忽略
!.txt //代表所有的txt文件都是不能夠被忽略的
/a/*.class //代表所有a資料夾內的.class檔都是要被忽略的


如果要幫忙別人的github雲端資料庫做出貢獻或者是fork雲端資料庫(複製倉庫到我自己的雲端)，可以使用下列步驟
1.git clone 本機舊專案網址
2.git remote -v 可以查看遠程有幾個分支
3.下載下來的本機資料跟遠端做連結 git remote add upstream(自己命名，但不是自己的專案所以取作其他名字) 該新更新專案網址(分本地repository)
4.git remote -v 這時候會出現一組origin(舊版本) 跟一組upstram(新版本)
5.這時候就可以使用git fetch upstream 把新專案內容抓下來
6.pull = fetch + merge
7.合併舊專案內容和新專案內容。
8.如果只是為了同步git rebase upstream/master,如果對內容有更動就應改使用git merge